{"version":3,"sources":["components/UI/Card.js","components/UI/LoadingIndicator.js","components/Ingredients/IngredientForm.js","components/Ingredients/IngredientList.js","hooks/http.js","components/UI/ErrorModal.js","components/Ingredients/Search.js","components/Ingredients/Ingredients.js","context/auth-context.js","components/Auth.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","children","LoadingIndicator","IngredientForm","React","memo","_useState","useState","_useState2","Object","slicedToArray","enteredTitle","setEnteredTitle","_useState3","_useState4","enteredAmount","setEnteredAmount","console","log","components_UI_Card","onSubmit","event","preventDefault","onAddIngredient","title","amount","htmlFor","type","id","value","onChange","target","loading","components_UI_LoadingIndicator","IngredientList","ingredients","map","ig","key","onClick","onRemoveItem","bind","initialState","error","data","extra","identifier","httpReducer","httpState","action","_objectSpread","responseData","errorMsg","Error","useHttp","_useReducer","useReducer","_useReducer2","dispatchHttp","clear","useCallback","sendRequest","url","method","body","reqExtra","reqIdentifier","fetch","then","res","json","resData","catch","err","message","isLoading","ErrorModal","Fragment","onClose","Search","onLoadIngredients","enteredFilter","setEnteredFilter","inputRef","useRef","_useHttp","useEffect","timer","setTimeout","current","query","length","concat","clearTimeout","loadedIngredients","push","UI_ErrorModal","ref","ingredientReducer","currentIngredients","toConsumableArray","ingredient","filter","ing","Ingredients","dispatch","Ingredients_objectSpread","name","filteredIngredientHandler","filteredIngs","addIngredientHandler","JSON","stringify","removeIngredientHandler","Ingredients_IngredientForm","Ingredients_Search","Ingredients_IngredientList","AuthContext","createContext","isAuth","login","AuthContextProvider","isAuthenticated","setIsAuthenticated","Provider","Auth","authContext","useContext","App","content","src_components_Auth","components_Ingredients_Ingredients","ReactDOM","render","auth_context","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f1cb0986.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './LoadingIndicator.css';\n\nconst LoadingIndicator = () => (\n  <div className=\"lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default LoadingIndicator;\n","import React, { useState } from 'react';\n\nimport Card from '../UI/Card';\nimport './IngredientForm.css';\nimport LoadingIndicator from '../UI/LoadingIndicator';\n\nconst IngredientForm = React.memo(props => {\n  const [ enteredTitle, setEnteredTitle ] = useState('');\n  const [ enteredAmount, setEnteredAmount ] = useState('');\n\n  console.log('RENDERING INGREDIENT FORM');\n  \n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onAddIngredient({title: enteredTitle, amount: enteredAmount});\n  };\n\n  return (\n    <section className=\"ingredient-form\">\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">Name</label>\n            <input \n              type=\"text\" \n              id=\"title\" \n              value={enteredTitle} \n              onChange={event => {\n                setEnteredTitle(event.target.value)\n                }} \n              />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">Amount</label>\n            <input \n              type=\"number\" \n              id=\"amount\" \n              value={enteredAmount}\n              onChange={event => {\n                setEnteredAmount(event.target.value)}\n              } />\n          </div>\n          <div className=\"ingredient-form__actions\">\n            <button type=\"submit\">Add Ingredient</button>\n            {props.loading && <LoadingIndicator />}\n            {/* the && replace the need to set a else case, this replace props.loading ? <.../> : null */}\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default IngredientForm;\n","import React from 'react';\n\nimport './IngredientList.css';\n\nconst IngredientList = React.memo(props => {\n  console.log('RENDERING INGREDIENT LIST');\n  \n  return (\n    <section className=\"ingredient-list\">\n      <h2>Loaded Ingredients</h2>\n      <ul>\n        {props.ingredients.map(ig => (\n          <li key={ig.id} onClick={props.onRemoveItem.bind(this, ig.id)}>\n            <span>{ig.title}</span>\n            <span>{ig.amount}x</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n});\n\nexport default IngredientList;\n","import { useReducer, useCallback } from 'react';\r\n\r\nconst initialState = {\r\n    loading: false, \r\n    error: null,\r\n    data: null,\r\n    extra: null,\r\n    identifier: null\r\n};\r\n\r\nconst httpReducer = (httpState, action) => {\r\n    switch (action.type) {\r\n        case 'SEND_REQ':\r\n            return {\r\n                loading: true, \r\n                error: null, \r\n                data: null, \r\n                extra: null, \r\n                identifier: action.identifier};\r\n        case 'RESPONSE':\r\n            return {\r\n                ...httpState,\r\n                loading: false, \r\n                data: action.responseData, \r\n                extra: action.extra};\r\n        case 'ERROR':\r\n            return {\r\n                loading: false, \r\n                error: action.errorMsg};\r\n        case 'CLEAR':\r\n            return initialState\r\n        default:\r\n            throw new Error('Should not be reached')\r\n    };\r\n  };\r\n\r\nconst useHttp = () => {\r\n    const [ httpState, dispatchHttp ] = useReducer(httpReducer, initialState);\r\n\r\n    const clear = useCallback(() =>  dispatchHttp({type: 'CLEAR' }), []);\r\n\r\n    const sendRequest = useCallback((url, method, body, reqExtra, reqIdentifier) => {\r\n        dispatchHttp({ type: 'SEND_REQ', identifier: reqIdentifier})\r\n        fetch(\r\n            url, \r\n            {\r\n                method: method,\r\n                body: body\r\n            }\r\n        )\r\n          .then(res => {\r\n            return res.json();\r\n          }).then(resData => {\r\n            dispatchHttp({type: 'RESPONSE', extra: reqExtra, responseData: resData});\r\n          })\r\n          .catch(err => {\r\n            dispatchHttp({type: 'ERROR', errorMsg: err.message});\r\n          });\r\n    }, []);\r\n\r\n    return {\r\n        isLoading: httpState.loading,\r\n        data: httpState.data,\r\n        error: httpState.error,\r\n        sendRequest: sendRequest,\r\n        reqExtra: httpState.extra,\r\n        reqIdentifier: httpState.identifier,\r\n        clear: clear\r\n    }; //can return any value\r\n};\r\n\r\nexport default useHttp","import React from 'react';\n\nimport './ErrorModal.css';\n\nconst ErrorModal = React.memo(props => {\n  return (\n    <React.Fragment>\n      <div className=\"backdrop\" onClick={props.onClose} />\n      <div className=\"error-modal\">\n        <h2>An Error Occurred!</h2>\n        <p>{props.children}</p>\n        <div className=\"error-modal__actions\">\n          <button type=\"button\" onClick={props.onClose}>\n            Okay\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default ErrorModal;\n","import React, { useState, useEffect, useRef } from 'react';\nimport useHttp from '../../hooks/http';\nimport Card from '../UI/Card';\nimport ErrorModal from '../UI/ErrorModal';\nimport './Search.css';\n\nconst Search = React.memo(props => {\n  const { onLoadIngredients } = props;//in order to use the passed prop function in the useEffect\n  const [enteredFilter, setEnteredFilter ] = useState('');\n  const inputRef = useRef();\n  const { isLoading, data, error, sendRequest, clear} = useHttp();\n  \n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (enteredFilter === inputRef.current.value) {\n        const query = enteredFilter.length === 0 \n      ? '' \n      : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\n        sendRequest('https://react-hooks-db.firebaseio.com/ingredients.json' + query, 'GET')\n      };  \n    }, 500);\n    return () => {\n      clearTimeout(timer); // this will clear the previous timeout we defined\n    };\n  }, [enteredFilter, inputRef, sendRequest]);\n\n  useEffect(() => {\n    if (!isLoading && !error && data) {\n      const loadedIngredients = [];\n      for (let key in data) {\n        loadedIngredients.push({\n          id: key,\n          title: data[key].title,\n          amount: data[key].amount\n        });\n      };\n      onLoadIngredients(loadedIngredients);\n    };\n  }, [data, isLoading, error, onLoadIngredients])\n\n\n  return (\n    <section className=\"search\">\n      {error && <ErrorModal onClose={clear}>{error}</ErrorModal>}\n      <Card>\n        <div className=\"search-input\">\n          <label>Filter by Title</label>\n          {isLoading && <span>Loading...</span>}\n          <input type=\"text\"\n          ref={inputRef} \n            value={enteredFilter} \n            onChange={event => setEnteredFilter(event.target.value)}/>\n        </div>\n      </Card>\n    </section>\n  );\n});\n\nexport default Search;\n","import React, { useReducer, useEffect, useCallback } from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport Search from './Search';\nimport ErrorModal from '../UI/ErrorModal';\nimport useHttp from '../../hooks/http';\n\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n    case 'ADD':\n      return [...currentIngredients, action.ingredient];\n    case 'DELETE':\n      return currentIngredients.filter(ing => ing.id !== action.id);\n    default:\n      throw new Error('wrong case in ing reducer')\n  };\n};\n\nconst Ingredients = () => {\n  const [ ingredients, dispatch ] = useReducer(ingredientReducer, []); // first value is the reducer function itself, second is the initial state\n  const { isLoading, error, data, sendRequest, reqExtra, reqIdentifier, clear} = useHttp();\n\n  // const [ ingredients, setIngredients ] = useState([]);\n  // const [ isLoading, setIsLoading ] = useState(false);\n  // const [ error, setError ] = useState();\n\n  useEffect(() => {\n    if (!isLoading && !error && reqIdentifier === 'REMOVE_INGREDIENT') {\n      dispatch({type: 'DELETE', id: reqExtra});\n    } else if (!isLoading && !error && reqIdentifier === 'ADD_INGREDIENT') {\n      dispatch({type: 'ADD', ingredient: {id: data.name, ...reqExtra}})\n    };\n  }, [data, reqExtra, reqIdentifier, isLoading, error]);\n\n  const filteredIngredientHandler = useCallback(filteredIngs => {\n    // setIngredients(filteredIngs);\n    dispatch({type: 'SET', ingredients: filteredIngs});\n  }, []);\n\n  const addIngredientHandler = useCallback(ingredient => {\n    sendRequest('https://react-hooks-db.firebaseio.com/ingredients.json/', \n    'POST',\n    JSON.stringify(ingredient),\n    ingredient,\n    'ADD_INGREDIENT'\n    );\n  }, [sendRequest]);\n\n  const removeIngredientHandler = useCallback(id => {\n    sendRequest(`https://react-hooks-db.firebaseio.com/ingredients/${id}.json`,\n     'DELETE',\n     null,\n     id,\n     'REMOVE_INGREDIENT'\n     )\n  }, [sendRequest]);\n\n  // const useMemoTest = useMemo(() => {\n  //   return {\n  //     lala: 'RETURN THE VALUES U WANT'\n  //   }\n  // }, []);\n\n  return (\n    <div className=\"App\">\n\n      {error && <ErrorModal onClose={clear}>{error}</ErrorModal>}\n      <IngredientForm \n        onAddIngredient={addIngredientHandler} \n        loading={isLoading} />\n\n      <section>\n        <Search onLoadIngredients={filteredIngredientHandler} />\n        <IngredientList ingredients={ingredients} onRemoveItem={removeIngredientHandler} />\n      </section>\n    </div>\n  );\n};\n\nexport default Ingredients;\n","import React, { useState } from 'react';\r\n\r\nexport const AuthContext = React.createContext({\r\n    isAuth: false,\r\n    login: () => {}\r\n});\r\n\r\nconst AuthContextProvider = props => {\r\n    const [ isAuthenticated, setIsAuthenticated ] = useState(false);\r\n\r\n    const loginHandler = () => {\r\n        setIsAuthenticated(true);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{login: loginHandler, isAuth: isAuthenticated}}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContextProvider;","import React, { useContext } from 'react';\n\nimport Card from './UI/Card';\nimport './Auth.css';\nimport { AuthContext } from '../context/auth-context';\n\nconst Auth = props => {\n  const authContext = useContext(AuthContext);\n\n  const loginHandler = () => {\n    authContext.login();\n  };\n\n  return (\n    <div className=\"auth\">\n      <Card>\n        <h2>You are not authenticated!</h2>\n        <p>Please log in to continue.</p>\n        <button onClick={loginHandler}>Log In</button>\n      </Card>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useContext } from 'react';\n\nimport Ingredients from './components/Ingredients/Ingredients';\nimport Auth from './components/Auth';\nimport { AuthContext } from './context/auth-context';\n\nconst App = props => {\n  const authContext = useContext(AuthContext);\n\n  let content = <Auth />\n  if ( authContext.isAuth ) {\n    content = <Ingredients />\n  };\n  \n  return content;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport AuthContextProvider from './context/auth-context';\n\nReactDOM.render(\n    <AuthContextProvider>\n        <App />\n    </AuthContextProvider>\n, document.getElementById('root'));\n"],"sourceRoot":""}